[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\ruman\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\ruman\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Amazon.com Inc. Java 17.0.4.1)
[debug]       Load.loadUnit: plugins took 126.4324ms
[debug]       Load.loadUnit: defsScala took 0.1808ms
[debug] [Loading] Scanning directory C:\Users\ruman\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ruman\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 18.0722 ms
[debug]           Load.resolveProject(global-plugins) took 33.6686ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\ruman\.sbt\1.0\plugins, plugins: List(<none>))) took 71.5875ms
[debug] [Loading] Done in C:\Users\ruman\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 90.7963ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2046ms
[debug]     Load.loadUnit(file:/C:/Users/ruman/.sbt/1.0/plugins/, ...) took 225.6049ms
[debug]   Load.apply: load took 429.7958ms
[debug]   Load.apply: resolveProjects took 4.3328ms
[debug]   Load.apply: finalTransforms took 64.3721ms
[debug]   Load.apply: config.delegates took 15.4112ms
[debug]   Load.apply: Def.make(settings)... took 564.1272ms
[debug]   Load.apply: structureIndex took 174.627ms
[debug]   Load.apply: mkStreams took 6.048ms
[info] loading global plugins from C:\Users\ruman\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4301.022ms
[debug]           Load.loadUnit: plugins took 22.6726ms
[debug]           Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\ruman\IdeaProjects\myCalendar\project
[debug]             Load.loadUnit: mkEval took 4.2301ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ruman\IdeaProjects\myCalendar\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.0203 ms
[info] loading settings for project mycalendar-build from idea.sbt ...
[debug]               Load.resolveProject(mycalendar-build) took 1.7828ms
[debug]             Load.loadTransitive: finalizeProject(Project(id mycalendar-build, base: C:\Users\ruman\IdeaProjects\myCalendar\project, plugins: List(<none>))) took 3.2681ms
[debug] [Loading] Done in C:\Users\ruman\IdeaProjects\myCalendar\project, returning: (mycalendar-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2576.8318ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.5348ms
[debug]         Load.loadUnit(file:/C:/Users/ruman/IdeaProjects/myCalendar/project/, ...) took 2603.5709ms
[debug]       Load.apply: load took 2604.5484ms
[debug]       Load.apply: resolveProjects took 0.072ms
[debug]       Load.apply: finalTransforms took 5.2359ms
[debug]       Load.apply: config.delegates took 0.1914ms
[debug]       Load.apply: Def.make(settings)... took 43.7179ms
[debug]       Load.apply: structureIndex took 18.9078ms
[debug]       Load.apply: mkStreams took 0.0017ms
[info] loading project definition from C:\Users\ruman\IdeaProjects\myCalendar\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3758.8797ms
[debug]     Load.loadUnit: defsScala took 0.0023ms
[debug] [Loading] Scanning directory C:\Users\ruman\IdeaProjects\myCalendar
[debug]       Load.loadUnit: mkEval took 0.2545ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.4924 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 113.083ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\ruman\IdeaProjects\myCalendar, plugins: List(<none>))) took 117.4988ms
[debug] [Loading] Done in C:\Users\ruman\IdeaProjects\myCalendar, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 990.7793ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.2581ms
[debug]   Load.loadUnit(file:/C:/Users/ruman/IdeaProjects/myCalendar/, ...) took 4759.4799ms
[debug] Load.apply: load took 4760.6785ms
[debug] Load.apply: resolveProjects took 0.0751ms
[debug] Load.apply: finalTransforms took 44.5915ms
[debug] Load.apply: config.delegates took 0.187ms
[debug] Load.apply: Def.make(settings)... took 63.0873ms
[debug] Load.apply: structureIndex took 16.9219ms
[debug] Load.apply: mkStreams took 0.0019ms
[info] set current project to myCalendar (in build file:/C:/Users/ruman/IdeaProjects/myCalendar/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59308 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59308, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to myCalendar (in build file:/C:/Users/ruman/IdeaProjects/myCalendar/)
[debug] > Exec(idea-shell, None, None)
